# -*- coding: utf-8 -*-
"""Image Processing-Asfar Niburas Khan.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_HyItoR-Ba30BqGw5LhT0QpzmJVtyMkQ
"""

# The following libraries were required to be installed as they were not
# were not included by default in Google Colab

!apt-get install libmagickwand-dev
!pip install Wand

'''
Ephesus
'''
# Imports
from wand.image import Image

# Pincushioning Ephesus.jpg
with Image(filename ="Ephesus.jpg") as img:
  arguments = (0.002, 0.0, 0.1, 1.0, 1050.0, 400.0)
  img.distort('barrel_inverse', arguments)
  img.save(filename ='pincushionEphesus.jpg') # Saving image for later use

# Pasting fighting dwarf and giant into pincushioned Ephesus

from PIL import Image, ImageEnhance

img = Image.open('pincushionEphesus.jpg')
print(img.size)

dwarf7 = Image.open('Dwarf-6.png')
dwarf7.thumbnail((170,170))
dwarf7 = ImageEnhance.Brightness(dwarf7).enhance(0.6)
dwarf7 = dwarf7.point(lambda p: p * 1.2)
dwarf7.save('Dwarf7Small.png') # Saving image for later use

giant3 = Image.open('Giant-3.png')
giant3.thumbnail((800,800))
giant3.save('giant3Small.png') # Saving image for later use

# Create new RGBA images with the same size as the JPEG image, this will
# be later used to paste the png images, which will then be used to paste
# into JPEG file
dwarf7_rgba = Image.new('RGBA', img.size, (0, 0, 0, 0))
giant3_rgba = Image.new('RGBA', img.size, (0, 0, 0, 0))

# Pasting resized images into RGBA photos
dwarf7_rgba.paste(dwarf7, (882, 243))
giant3_rgba.paste(giant3, (257, 50))

# Paste png into jpg file
img_fight = Image.alpha_composite(img.convert('RGBA'), dwarf7_rgba)
img_fight = Image.alpha_composite(img_fight, giant3_rgba)

img_fight.convert('RGB').save('Ephesus_fighting.png')

# Using last saved photo to create final enhanced photo

img = Image.open('Ephesus_fighting.png').convert('L')

enhanced_output = ImageEnhance.Brightness(img).enhance(0.6)

# Adjust contrast
adjusted_image = img.point(lambda p: p * 0.7)

texture = Image.open('fog.png')
texture = texture.resize(adjusted_image.size, Image.ANTIALIAS)
texture = texture.convert('L')

textured_image = Image.blend(adjusted_image, texture, alpha=0.15)
textured_image.save('Ephesus_Enhanced.jpg') # FINAL IMAGE

'''
Palatine Hill GIF
'''

from PIL import Image, ImageEnhance, ImageDraw
# Palatine Hill Edits

palatine = Image.open('Palatine Hill.jpg')
palatine = ImageEnhance.Brightness(palatine).enhance(1.25)
palatine = palatine.point(lambda p: p * 0.9)

palatine_hsv = palatine.convert('HSV')

# Hue (0.0 (no change) to 1.0)
palatine_hue = ImageEnhance.Color(palatine_hsv).enhance(1)

# Saturation (0.0 (means grayscale) to 1.0)
palatine_saturation = ImageEnhance.Color(palatine_hue).enhance(0.92)

# Convert the image back to RGB mode
palatinetemp_rgb = palatine_saturation.convert('RGB')

sandtexture = Image.open('Sandpaper Texture.jpg')
sandtexture = sandtexture.resize(palatinetemp_rgb.size, Image.ANTIALIAS)
sandtexture = sandtexture.convert('RGB')

palatine_textured = Image.blend(palatinetemp_rgb, sandtexture, alpha=0.17)
palatine_textured.save('Palatine Hill_Enhanced.jpg') # FINAL IMAGE

# Palatine - Before edits
palatinebefore = Image.open('Palatine Hill Before.jpg')
palatinebefore = ImageEnhance.Brightness(palatinebefore).enhance(1.25)
palatinebefore = palatinebefore.point(lambda p: p * 0.9)

palatinebefore_hsv = palatinebefore.convert('HSV')

# Hue (0.0 (no change) to 1.0)
palatinebefore_hue = ImageEnhance.Color(palatinebefore_hsv).enhance(1.3)

# Saturation (0.0 (means grayscale) to 1.0)
palatinebefore_saturation = ImageEnhance.Color(palatinebefore_hue).enhance(0.8)

# Convert the image back to RGB mode
palatinebeforetemp_rgb = palatinebefore_saturation.convert('RGB')

palatinebeforetemp_rgb.save('palatinebeforeTemp.jpg')

sandtexture = Image.open('Sandpaper Texture.jpg')
sandtexture = sandtexture.resize(palatinebeforetemp_rgb.size, Image.ANTIALIAS)
sandtexture = sandtexture.convert('RGB')

palatinebefore_textured = Image.blend(palatinebeforetemp_rgb, sandtexture, alpha=0.3)
palatinebefore_textured.save('Palatine Hill Before_Enhanced.jpg') # FINAL IMAGE

# GIF of Palatine Before and After

palatinebefore = Image.open('Palatine Hill Before_Enhanced.jpg')
palatineafter = Image.open('Palatine Hill_Enhanced.jpg')

print(palatinebefore.size)
print(palatineafter.size)

# Size is irregular, so bigger photo has to be cropped

left = (1280 - 1023) // 2
top = (853 - 653) // 2
right = left + 1023
bottom = top + 653
palatineafter_cropped = palatineafter.crop((left, top, right, bottom))

print(palatinebefore.size)
print(palatineafter_cropped.size)

palatineafter_cropped.save('Palatine Hill_Enhanced and Cropped.jpg') # Save Image for later use

frames = [] # GIF will be in frames

for alpha in range(0, 101, 5): # Changes alpha value in increments of 20 to make crossfade effect
  gif_image = Image.new("RGB", (1023, 653))
  blendimage = Image.blend(palatinebefore,palatineafter_cropped,alpha/100)
  gif_image.paste(blendimage, (0,0))
  frames.append(gif_image)

frames[0].save('Palatine_GIF.gif', save_all=True, append_images=frames[1:], duration=200, loop=0) # FINAL IMAGE

'''
Pompeii GIF
'''

# Pompeii Edits

pompeii = Image.open('Pompeii.jpg')
pompeii = ImageEnhance.Brightness(pompeii).enhance(0.8)
pompeii = pompeii.point(lambda p: p * 1.2)

pompeii_hsv = pompeii.convert('HSV')

# Hue (0.0 (no change) to 1.0)
pompeii_hue = ImageEnhance.Color(pompeii_hsv).enhance(1.5)

# Saturation (0.0 (means grayscale) to 1.0)
pompeii_saturation = ImageEnhance.Color(pompeii_hue).enhance(0.45)

# Convert the image back to RGB mode
pompeiitemp_rgb = pompeii_saturation.convert('RGB')

giant2 = Image.open('Giant-2.png')
giant2.thumbnail((3000,3000))
giant2.save('giant2Small.png')

giant2_rgba = Image.new('RGBA', pompeiitemp_rgb.size, (0, 0, 0, 0))
giant2_rgba.paste(giant2, (1000, 200))

print(pompeiitemp_rgb.size)
print(giant2_rgba.size)

PompeiiGiant = Image.alpha_composite(pompeiitemp_rgb.convert('RGBA'), giant2_rgba)

PompeiiGiant.convert('RGB').save('Pompeii_Enhanced.jpg') # FINAL IMAGE

# Streets of Pompeii edits
streetPompeii = Image.open('Street of Pompeii.jpg')
streetPompeii = ImageEnhance.Brightness(streetPompeii).enhance(1.1)
streetPompeii = streetPompeii.point(lambda p: p * 0.9)

streetPompeii_hsv = streetPompeii.convert('HSV')

# Hue (0.0 (no change) to 1.0)
streetPompeii_hue = ImageEnhance.Color(streetPompeii_hsv).enhance(0.96)

# Saturation (0.0 (means grayscale) to 1.0)
streetPompeii_saturation = ImageEnhance.Color(streetPompeii_hue).enhance(0.9)

# Convert the image back to RGB mode
streetPompeiitemp_rgb = streetPompeii_saturation.convert('RGB')

giant1 = Image.open('Giant-1.png')
giant1.thumbnail((450,450))
giant1.save('giant1Small.png')

giant1_rgba = Image.new('RGBA', streetPompeiitemp_rgb.size, (0, 0, 0, 0))
giant1_rgba.paste(giant1, (200, 160))

StreetPompeiiGiant = Image.alpha_composite(streetPompeiitemp_rgb .convert('RGBA'), giant1_rgba)

StreetPompeiiGiant.convert('RGB').save('Street of Pompeii_Enhanced.jpg') # FINAL IMAGE

# GIF of Pompeii in two different states

StreetPompeiiGiant = Image.open('Street of Pompeii_Enhanced.jpg')
Pompeii = Image.open('Pompeii_Enhanced.jpg')

print(StreetPompeiiGiant.size)
print(Pompeii.size)

# Bigger photo shortened
Pompeii.thumbnail((1350, 790))

print(StreetPompeiiGiant.size)
print(Pompeii.size)

# Size is irregular, so bigger photo has to be cropped

left = (1350 - 1185) // 2
top = 0
right = left + 1185
bottom = 790
StreetPompeiiGiant_cropped = StreetPompeiiGiant.crop((left, top, right, bottom))

print(StreetPompeiiGiant_cropped.size)
print(Pompeii.size)

frames = [] # GIF will be in frames

for alpha in range(0, 101, 5): # Changes alpha value in increments of 20 to make crossfade effect
  gif_image = Image.new("RGB", (1023, 653))
  blendimage = Image.blend(Pompeii,StreetPompeiiGiant_cropped,alpha/100)
  gif_image.paste(blendimage, (0,0))
  frames.append(gif_image)

frames[0].save('Pompeii_GIF.gif', save_all=True, append_images=frames[1:], duration=200, loop=0) # FINAL IMAGE